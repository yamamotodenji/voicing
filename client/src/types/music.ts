// 音楽の基本要素を定義するTypeScriptインターフェース

// 単一の音符を表現するインターフェース
export interface Note {
  name: string;        // 音名（例: "C", "F#"）
  octave: number;      // オクターブ（例: 4）
  frequency: number;   // 周波数（Hz）
}

// コード（和音）を表現するインターフェース
export interface Chord {
  root: string;           // ルート音（根音）
  quality: string;        // コードクオリティ（例: "major", "minor7"）
  extensions: string[];   // 拡張音（例: ["9", "13"]）
  bass?: string;          // ベース音（オプション、転回形の場合）
}

// ボイシング（和音の配置）を表現するインターフェース
export interface Voicing {
  notes: Note[];                    // 構成音の配列
  type: 'close' | 'open' | 'drop2' | 'drop3';  // ボイシングタイプ
  position: number;                 // ポジション番号
}

// コード進行を表現するインターフェース
export interface ChordProgression {
  chords: string[];      // コード名の配列
  key: string;           // キー（調）
  timeSignature: string; // 拍子（例: "4/4"）
}

// ボイシング結果を表現するインターフェース
export interface VoicingResult {
  chord: string;     // コード名
  voicing: Voicing;  // ボイシング情報
  position: number;  // ポジション番号
}

// 音楽理論の定数定義

// 12音階の音名（半音単位で0から11まで）
// 各数字はルート音からの半音の距離を表す
export const NOTE_NAMES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];

// コードクオリティの定義
// 各配列の数字は、ルート音からの半音の距離を表す
export const CHORD_QUALITIES = {
  // 基本的な三和音
  major: [0, 4, 7],        // メジャー（長三和音）: ルート + 長3度 + 完全5度
  minor: [0, 3, 7],        // マイナー（短三和音）: ルート + 短3度 + 完全5度
  diminished: [0, 3, 6],   // ディミニッシュ（減三和音）: ルート + 短3度 + 減5度
  augmented: [0, 4, 8],    // オーギュメント（増三和音）: ルート + 長3度 + 増5度
  
  // 四和音（7thコード）
  dominant: [0, 4, 7, 10],    // ドミナント7th: メジャー + 短7度
  major7: [0, 4, 7, 11],      // メジャー7th: メジャー + 長7度
  minor7: [0, 3, 7, 10],      // マイナー7th: マイナー + 短7度
  minorMajor7: [0, 3, 7, 11], // マイナーメジャー7th: マイナー + 長7度
  diminished7: [0, 3, 6, 9],  // ディミニッシュ7th: ディミニッシュ + 減7度
  
  // サスペンデッドコード
  sus2: [0, 2, 7],  // サス2: ルート + 長2度 + 完全5度
  sus4: [0, 5, 7],  // サス4: ルート + 完全4度 + 完全5度
  
  // アドコード
  add9: [0, 4, 7, 14],   // アド9: メジャー + 長9度
  madd9: [0, 3, 7, 14],  // マイナーアド9: マイナー + 長9度
  
  // 6thコード
  '6': [0, 4, 7, 9],     // メジャー6th: メジャー + 長6度
  m6: [0, 3, 7, 9],      // マイナー6th: マイナー + 長6度
  
  // 6/9コード
  '69': [0, 4, 7, 9, 14],  // メジャー6/9: メジャー6th + 長9度
  m69: [0, 3, 7, 9, 14],   // マイナー6/9: マイナー6th + 長9度
  
  // 9thコード
  '9': [0, 4, 7, 10, 14],   // ドミナント9th: ドミナント7th + 長9度
  m9: [0, 3, 7, 10, 14],    // マイナー9th: マイナー7th + 長9度
  maj9: [0, 4, 7, 11, 14],  // メジャー9th: メジャー7th + 長9度
  
  // 11thコード
  '11': [0, 4, 7, 10, 14, 17],   // ドミナント11th: ドミナント9th + 完全11度
  m11: [0, 3, 7, 10, 14, 17],    // マイナー11th: マイナー9th + 完全11度
  maj11: [0, 4, 7, 11, 14, 17],  // メジャー11th: メジャー9th + 完全11度
  
  // 13thコード
  '13': [0, 4, 7, 10, 14, 17, 21],   // ドミナント13th: ドミナント11th + 長13度
  m13: [0, 3, 7, 10, 14, 17, 21],    // マイナー13th: マイナー11th + 長13度
  maj13: [0, 4, 7, 11, 14, 17, 21]   // メジャー13th: メジャー11th + 長13度
};
